---
import BlogPost from "../../components/BlogPost.astro";
import BaseLayout from "../../layouts/BaseLayout.astro";
//getStaticPaths 函数返回一个页面路由数组，这些页面将使用文件中定义的相同模板。
// 你可以使用 .astro 文件创建整套动态页面，这些文件需要向外暴露一个 getStaticPaths() 函数。
// 固定写法
export async function getStaticPaths() {
  const allPosts = Object.values(
    import.meta.glob("../../content/blog/*.md", { eager: true })
  );

  //访问任意的 path
  const uniqueTags = [
    ...new Set(allPosts.map((post: any) => post.frontmatter.tags).flat()),
  ];

  //   return [
  //     {params: {tag: "astro"}, props: {posts: allPosts}},
  //     {params: {tag: "successes"}, props: {posts: allPosts}},
  //     {params: {tag: "community"}, props: {posts: allPosts}},
  //     {params: {tag: "blogging"}, props: {posts: allPosts}},
  //     {params: {tag: "setbacks"}, props: {posts: allPosts}},
  //     {params: {tag: "learning in public"}, props: {posts: allPosts}}
  //   ];
  return uniqueTags.map((tag) => {
    const filteredPosts = allPosts.filter((post: any) =>
      post.frontmatter.tags.includes(tag)
    );
    return {
      params: { tag },
      props: { posts: filteredPosts },
    };
  });
}
const { tag } = Astro.params;
const { posts } = Astro.props;
// const filteredPosts = posts.filter((post: any) =>
//   post.frontmatter.tags?.includes(tag)
// );
---

<BaseLayout pageTitle={tag}>
  <p>包含「{tag}」标签的文章</p>
  <ul>
    <!-- {
      filteredPosts.map((post: any) => (
        <BlogPost url={post.url} title={post.frontmatter.title} />
      ))
    } -->

    {
      posts.map((post: any) => (
        <BlogPost url={post.url} title={post.frontmatter.title} />
      ))
    }
  </ul>
</BaseLayout>
